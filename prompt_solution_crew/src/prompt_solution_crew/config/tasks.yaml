analyze_requirements_task:
  description: >
    Analyze the following user requirements for prompt engineering solution:

    Task Description: {task_description}
    Task Type: {task_type} 
    Model Preference: {model_preference}
    Tone: {tone}
    Context: {context}
    Sample Data: {sample_data}
    Examples: {examples}

    Review the user preferences and identify THREE most relevant and helpful optimization directions.
    For each direction, provide:
    1. Clear description of the optimization focus
    2. Why this direction is particularly relevant to the user's needs
    3. Expected benefits and improvements
    4. Key considerations for implementation
    5. Prompt engineer assigned to, first direction assigned to prompt engineer 1, second direction assigned to prompt engineer 2, third direction assigned to prompt engineer 3

    Provide the output in JSON format with three distinct optimization directions.
  expected_output: >
    A JSON object containing three optimization directions, each with focus, relevance, benefits, implementation considerations and assigned prompt engineer.
  agent: architect
  output_json: DirectionsList

optimize_prompt_direction_1:
  description: >
    Based on the FIRST direction with assigned prompt engineer_1 from above {architect_results} from the architect, create a complete prompt structure that implements this optimization direction.
    
    User Requirements

    Task Description: {task_description}
    Task Type: {task_type} 
    Model Preference: {model_preference}
    Tone: {tone}
    Context: {context}
    Sample Data: {sample_data}
    Examples: {examples}
    

    Your task is to generate a complete prompt structure following these components:

    1. Role Component:
    Purpose: Define the LLM's identity, expertise, and responsibilities.
    Impact: The role shapes how the LLM understands and approaches the task.

    Required Elements:
    a) Identity & Expertise
    - Purpose: Establish the LLM's professional identity and domain knowledge
    - Structure: [Professional Title] with [X years/level] of experience in [specific domain]
    - Example: "You are a senior data analyst with 10 years of experience in financial metrics"

    b) Core Competencies
    - Purpose: Define key skills and capabilities
    - Structure: List 2-3 primary areas of expertise
    - Example: "Your expertise includes data visualization, statistical analysis, and trend forecasting"

    c) Professional Context
    - Purpose: Establish working environment and standards
    - Structure: Describe relevant industry context and quality standards
    - Example: "You work in a Fortune 500 company, adhering to industry best practices and compliance standards"

    d) Primary Objective
    - Purpose: State the main goal or responsibility
    - Structure: Clear statement of primary function
    - Example: "Your primary goal is to transform complex data into actionable business insights"

    2. Task Component:
    Purpose: Define what needs to be done and how it should be accomplished.
    Impact: Clear task definition ensures accurate and focused execution.

    Required Elements:
    a) Objective Statement
    - Purpose: Clear statement of what needs to be achieved
    - Structure: Action verb + specific deliverable + success criteria
    - Example: "Analyze the provided dataset to identify key performance trends and generate actionable recommendations"

    b) Input Specification
    - Purpose: Define what information/resources will be provided
    - Structure: List of input types and their formats
    - Example: "You will receive: 1. Monthly sales data (CSV format), 2. Market context (text), 3. Business goals (bullet points)"

    c) Process Steps
    - Purpose: Outline the approach to complete the task
    - Structure: Numbered sequence of actions
    - Example: "1. Review raw data, 2. Clean and normalize, 3. Perform analysis, 4. Generate insights, 5. Format recommendations"

    d) Output Requirements
    - Purpose: Specify expected deliverables
    - Structure: Detailed description of required output format and content
    - Example: "Produce a report containing: 1. Executive summary, 2. Key findings, 3. Detailed analysis, 4. Recommendations"

    3. Rules & Constraints:
    Purpose: Define boundaries, requirements, and limitations for task execution.
    Impact: Ensures output meets quality standards and requirements.

    Required Elements:
    a) Quality Standards
    - Purpose: Define required level of quality and accuracy
    - Structure: List specific quality criteria
    - Example: "- All calculations must be double-checked for accuracy
                - Sources must be cited for external data
                - Confidence levels must be stated for predictions"

    b) Ethical Guidelines
    - Purpose: Ensure ethical compliance and responsibility
    - Structure: List of ethical requirements and boundaries
    - Example: "- Maintain data privacy and confidentiality
                - Avoid bias in analysis and recommendations
                - Disclose any limitations or assumptions"

    c) Format Requirements
    - Purpose: Specify presentation and structure rules
    - Structure: List of formatting requirements
    - Example: "- Use professional business language
                - Include visual aids for complex data
                - Follow company branding guidelines"

    d) Process Constraints
    - Purpose: Define operational limitations and requirements
    - Structure: List of process-related rules
    - Example: "- Complete analysis within specified timeframe
                - Use only approved data sources
                - Follow required review processes"

    4. Reasoning Method:
    Purpose: Define how the LLM should approach problem-solving and logical thinking.
    Impact: The chosen method will influence how the LLM processes information and reaches conclusions.
    
    Available Methods:
    a) Chain-of-Thought (CoT)
    - Purpose: Enable step-by-step logical reasoning
    - Best for: Complex problems requiring clear logical progression
    - Implementation: Break down reasoning into explicit intermediate steps
    - Example: "Let's solve this step by step: First... Second... Therefore..."

    b) Tree-of-Thought (ToT)
    - Purpose: Explore multiple potential solution paths
    - Best for: Problems with multiple possible approaches
    - Implementation: Consider different branches of reasoning simultaneously
    - Example: "Let's explore three possible approaches: Path A... Path B... Path C..."

    c) Buffer of Thoughts (BoT)
    - Purpose: Maintain context while processing complex information
    - Best for: Tasks requiring memory of previous reasoning steps
    - Implementation: Store and reference key insights throughout the process
    - Example: "Important points to remember: 1... 2... Now, considering these points..."

    d) ReAct
    - Purpose: Combine reasoning with action steps
    - Best for: Tasks requiring both analysis and specific actions
    - Implementation: Alternate between reasoning and action planning
    - Example: "Thought: We need to... Action: Let's... Observation: This shows..."

    e) Program-of-Thought
    - Purpose: Structure reasoning like a computer program
    - Best for: Highly systematic or algorithmic tasks
    - Implementation: Use programming-like logic in reasoning
    - Example: "Input -> Process -> Output: If condition then action..."

    5. Planning Method:
    Purpose: Structure how the LLM organizes and approaches the overall task.
    Impact: The chosen method will determine how the task is broken down and executed.

    Available Methods:
    a) Least-to-Most Decomposition
    - Purpose: Break complex tasks into manageable pieces
    - Best for: Complex tasks that can be solved incrementally
    - Implementation: Start with simplest subtasks and build up
    - Example: "1. Start with basic... 2. Add complexity... 3. Integrate all..."

    b) Plan-and-Solve Strategy
    - Purpose: Create comprehensive plan before execution
    - Best for: Well-defined problems requiring systematic approach
    - Implementation: Detailed planning phase followed by execution
    - Example: "Plan: 1... 2... 3... Now execute each step..."

    c) Progressive Task Refinement
    - Purpose: Iteratively improve solution quality
    - Best for: Tasks requiring continuous improvement
    - Implementation: Start broad, then refine based on feedback
    - Example: "Initial approach -> Refine based on X -> Further improve with Y"

    d) Dependency-Based Planning
    - Purpose: Organize tasks based on prerequisites
    - Best for: Tasks with clear dependencies
    - Implementation: Map dependencies and sequence accordingly
    - Example: "Must complete A before B, then C can start..."

    e) Hierarchical Task Planning
    - Purpose: Organize tasks in levels of abstraction
    - Best for: Complex tasks with clear hierarchy
    - Implementation: Break down from high-level to detailed steps
    - Example: "Main goal -> Sub-goals -> Specific actions"

    6. Output Format:
    Purpose: Define how the final response should be structured and presented.
    Impact: The chosen format will affect how the information is organized and consumed.

    Available Formats:
    a) JSON
    - Purpose: Structured, machine-readable data
    - Best for: Data that needs to be processed or parsed
    - Structure: Nested key-value pairs

    b) Email
    - Purpose: Professional communication format
    - Best for: Business communications or formal responses
    - Structure: Subject, greeting, body, closing
    - Example: "Subject: ... Dear ..., [Content] Best regards, ..."

    c) Markdown
    - Purpose: Formatted text with hierarchy
    - Best for: Documentation or structured content
    - Structure: Headers, lists, emphasis, links
    - Example: "# Title\n## Subtitle\n- Point 1\n- Point 2"

    d) Text
    - Purpose: Simple, readable plain text
    - Best for: Direct, unformatted responses
    - Structure: Paragraphs and line breaks
    - Example: "Main point. Supporting details. Conclusion."

    e) Other
    - Purpose: Custom format for specific needs
    - Best for: Special requirements not covered by standard formats
    - Structure: As specified by requirements
    - Example: Based on specific needs

    Remember: Your goal is to provide an optimized prompt structure, not to solve the user's problem directly.

    Provide the output in JSON format including:
    1. Complete prompt structure (role, task, rules)
    2. Selected methods (reasoning_method, planning_method, output_format) with justification
    3. Explanation of optimization choices
    4. Usage guidelines
  expected_output: >
    A JSON object containing the complete prompt structure, selected methods with justification, explanation, and guidelines.
  agent: prompt_engineer_1
  context: [analyze_requirements_task]
  output_json: PromptTemplate

optimize_prompt_direction_2:
  description: >
    Based on the SECOND direction with assigned prompt engineer_2 from above {architect_results} from the architect, create a complete prompt structure that implements this optimization direction.
    
    User Requirements

    Task Description: {task_description}
    Task Type: {task_type} 
    Model Preference: {model_preference}
    Tone: {tone}
    Context: {context}
    Sample Data: {sample_data}
    Examples: {examples}
    

    Your task is to generate a complete prompt structure following these components:

    1. Role Component:
    Purpose: Define the LLM's identity, expertise, and responsibilities.
    Impact: The role shapes how the LLM understands and approaches the task.

    Required Elements:
    a) Identity & Expertise
    - Purpose: Establish the LLM's professional identity and domain knowledge
    - Structure: [Professional Title] with [X years/level] of experience in [specific domain]
    - Example: "You are a senior data analyst with 10 years of experience in financial metrics"

    b) Core Competencies
    - Purpose: Define key skills and capabilities
    - Structure: List 2-3 primary areas of expertise
    - Example: "Your expertise includes data visualization, statistical analysis, and trend forecasting"

    c) Professional Context
    - Purpose: Establish working environment and standards
    - Structure: Describe relevant industry context and quality standards
    - Example: "You work in a Fortune 500 company, adhering to industry best practices and compliance standards"

    d) Primary Objective
    - Purpose: State the main goal or responsibility
    - Structure: Clear statement of primary function
    - Example: "Your primary goal is to transform complex data into actionable business insights"

    2. Task Component:
    Purpose: Define what needs to be done and how it should be accomplished.
    Impact: Clear task definition ensures accurate and focused execution.

    Required Elements:
    a) Objective Statement
    - Purpose: Clear statement of what needs to be achieved
    - Structure: Action verb + specific deliverable + success criteria
    - Example: "Analyze the provided dataset to identify key performance trends and generate actionable recommendations"

    b) Input Specification
    - Purpose: Define what information/resources will be provided
    - Structure: List of input types and their formats
    - Example: "You will receive: 1. Monthly sales data (CSV format), 2. Market context (text), 3. Business goals (bullet points)"

    c) Process Steps
    - Purpose: Outline the approach to complete the task
    - Structure: Numbered sequence of actions
    - Example: "1. Review raw data, 2. Clean and normalize, 3. Perform analysis, 4. Generate insights, 5. Format recommendations"

    d) Output Requirements
    - Purpose: Specify expected deliverables
    - Structure: Detailed description of required output format and content
    - Example: "Produce a report containing: 1. Executive summary, 2. Key findings, 3. Detailed analysis, 4. Recommendations"

    3. Rules & Constraints:
    Purpose: Define boundaries, requirements, and limitations for task execution.
    Impact: Ensures output meets quality standards and requirements.

    Required Elements:
    a) Quality Standards
    - Purpose: Define required level of quality and accuracy
    - Structure: List specific quality criteria
    - Example: "- All calculations must be double-checked for accuracy
                - Sources must be cited for external data
                - Confidence levels must be stated for predictions"

    b) Ethical Guidelines
    - Purpose: Ensure ethical compliance and responsibility
    - Structure: List of ethical requirements and boundaries
    - Example: "- Maintain data privacy and confidentiality
                - Avoid bias in analysis and recommendations
                - Disclose any limitations or assumptions"

    c) Format Requirements
    - Purpose: Specify presentation and structure rules
    - Structure: List of formatting requirements
    - Example: "- Use professional business language
                - Include visual aids for complex data
                - Follow company branding guidelines"

    d) Process Constraints
    - Purpose: Define operational limitations and requirements
    - Structure: List of process-related rules
    - Example: "- Complete analysis within specified timeframe
                - Use only approved data sources
                - Follow required review processes"

    4. Reasoning Method:
    Purpose: Define how the LLM should approach problem-solving and logical thinking.
    Impact: The chosen method will influence how the LLM processes information and reaches conclusions.
    
    Available Methods:
    a) Chain-of-Thought (CoT)
    - Purpose: Enable step-by-step logical reasoning
    - Best for: Complex problems requiring clear logical progression
    - Implementation: Break down reasoning into explicit intermediate steps
    - Example: "Let's solve this step by step: First... Second... Therefore..."

    b) Tree-of-Thought (ToT)
    - Purpose: Explore multiple potential solution paths
    - Best for: Problems with multiple possible approaches
    - Implementation: Consider different branches of reasoning simultaneously
    - Example: "Let's explore three possible approaches: Path A... Path B... Path C..."

    c) Buffer of Thoughts (BoT)
    - Purpose: Maintain context while processing complex information
    - Best for: Tasks requiring memory of previous reasoning steps
    - Implementation: Store and reference key insights throughout the process
    - Example: "Important points to remember: 1... 2... Now, considering these points..."

    d) ReAct
    - Purpose: Combine reasoning with action steps
    - Best for: Tasks requiring both analysis and specific actions
    - Implementation: Alternate between reasoning and action planning
    - Example: "Thought: We need to... Action: Let's... Observation: This shows..."

    e) Program-of-Thought
    - Purpose: Structure reasoning like a computer program
    - Best for: Highly systematic or algorithmic tasks
    - Implementation: Use programming-like logic in reasoning
    - Example: "Input -> Process -> Output: If condition then action..."

    5. Planning Method:
    Purpose: Structure how the LLM organizes and approaches the overall task.
    Impact: The chosen method will determine how the task is broken down and executed.

    Available Methods:
    a) Least-to-Most Decomposition
    - Purpose: Break complex tasks into manageable pieces
    - Best for: Complex tasks that can be solved incrementally
    - Implementation: Start with simplest subtasks and build up
    - Example: "1. Start with basic... 2. Add complexity... 3. Integrate all..."

    b) Plan-and-Solve Strategy
    - Purpose: Create comprehensive plan before execution
    - Best for: Well-defined problems requiring systematic approach
    - Implementation: Detailed planning phase followed by execution
    - Example: "Plan: 1... 2... 3... Now execute each step..."

    c) Progressive Task Refinement
    - Purpose: Iteratively improve solution quality
    - Best for: Tasks requiring continuous improvement
    - Implementation: Start broad, then refine based on feedback
    - Example: "Initial approach -> Refine based on X -> Further improve with Y"

    d) Dependency-Based Planning
    - Purpose: Organize tasks based on prerequisites
    - Best for: Tasks with clear dependencies
    - Implementation: Map dependencies and sequence accordingly
    - Example: "Must complete A before B, then C can start..."

    e) Hierarchical Task Planning
    - Purpose: Organize tasks in levels of abstraction
    - Best for: Complex tasks with clear hierarchy
    - Implementation: Break down from high-level to detailed steps
    - Example: "Main goal -> Sub-goals -> Specific actions"

    6. Output Format:
    Purpose: Define how the final response should be structured and presented.
    Impact: The chosen format will affect how the information is organized and consumed.

    Available Formats:
    a) JSON
    - Purpose: Structured, machine-readable data
    - Best for: Data that needs to be processed or parsed
    - Structure: Nested key-value pairs

    b) Email
    - Purpose: Professional communication format
    - Best for: Business communications or formal responses
    - Structure: Subject, greeting, body, closing
    - Example: "Subject: ... Dear ..., [Content] Best regards, ..."

    c) Markdown
    - Purpose: Formatted text with hierarchy
    - Best for: Documentation or structured content
    - Structure: Headers, lists, emphasis, links
    - Example: "# Title\n## Subtitle\n- Point 1\n- Point 2"

    d) Text
    - Purpose: Simple, readable plain text
    - Best for: Direct, unformatted responses
    - Structure: Paragraphs and line breaks
    - Example: "Main point. Supporting details. Conclusion."

    e) Other
    - Purpose: Custom format for specific needs
    - Best for: Special requirements not covered by standard formats
    - Structure: As specified by requirements
    - Example: Based on specific needs

    Remember: Your goal is to provide an optimized prompt structure, not to solve the user's problem directly.

    Provide the output in JSON format including:
    1. Complete prompt structure (role, task, rules)
    2. Selected methods (reasoning_method, planning_method, output_format) with justification
    3. Explanation of optimization choices
    4. Usage guidelines
  expected_output: >
    A JSON object containing the complete prompt structure, selected methods with justification, explanation, and guidelines.
  agent: prompt_engineer_2
  context: [analyze_requirements_task]
  output_json: PromptTemplate


optimize_prompt_direction_3:
  description: >
    Based on the THIRD direction with assigned prompt engineer_3 from above {architect_results} from the architect, create a complete prompt structure that implements this optimization direction.
    
    User Requirements

    Task Description: {task_description}
    Task Type: {task_type} 
    Model Preference: {model_preference}
    Tone: {tone}
    Context: {context}
    Sample Data: {sample_data}
    Examples: {examples}
    

    Your task is to generate a complete prompt structure following these components:

    1. Role Component:
    Purpose: Define the LLM's identity, expertise, and responsibilities.
    Impact: The role shapes how the LLM understands and approaches the task.

    Required Elements:
    a) Identity & Expertise
    - Purpose: Establish the LLM's professional identity and domain knowledge
    - Structure: [Professional Title] with [X years/level] of experience in [specific domain]
    - Example: "You are a senior data analyst with 10 years of experience in financial metrics"

    b) Core Competencies
    - Purpose: Define key skills and capabilities
    - Structure: List 2-3 primary areas of expertise
    - Example: "Your expertise includes data visualization, statistical analysis, and trend forecasting"

    c) Professional Context
    - Purpose: Establish working environment and standards
    - Structure: Describe relevant industry context and quality standards
    - Example: "You work in a Fortune 500 company, adhering to industry best practices and compliance standards"

    d) Primary Objective
    - Purpose: State the main goal or responsibility
    - Structure: Clear statement of primary function
    - Example: "Your primary goal is to transform complex data into actionable business insights"

    2. Task Component:
    Purpose: Define what needs to be done and how it should be accomplished.
    Impact: Clear task definition ensures accurate and focused execution.

    Required Elements:
    a) Objective Statement
    - Purpose: Clear statement of what needs to be achieved
    - Structure: Action verb + specific deliverable + success criteria
    - Example: "Analyze the provided dataset to identify key performance trends and generate actionable recommendations"

    b) Input Specification
    - Purpose: Define what information/resources will be provided
    - Structure: List of input types and their formats
    - Example: "You will receive: 1. Monthly sales data (CSV format), 2. Market context (text), 3. Business goals (bullet points)"

    c) Process Steps
    - Purpose: Outline the approach to complete the task
    - Structure: Numbered sequence of actions
    - Example: "1. Review raw data, 2. Clean and normalize, 3. Perform analysis, 4. Generate insights, 5. Format recommendations"

    d) Output Requirements
    - Purpose: Specify expected deliverables
    - Structure: Detailed description of required output format and content
    - Example: "Produce a report containing: 1. Executive summary, 2. Key findings, 3. Detailed analysis, 4. Recommendations"

    3. Rules & Constraints:
    Purpose: Define boundaries, requirements, and limitations for task execution.
    Impact: Ensures output meets quality standards and requirements.

    Required Elements:
    a) Quality Standards
    - Purpose: Define required level of quality and accuracy
    - Structure: List specific quality criteria
    - Example: "- All calculations must be double-checked for accuracy
                - Sources must be cited for external data
                - Confidence levels must be stated for predictions"

    b) Ethical Guidelines
    - Purpose: Ensure ethical compliance and responsibility
    - Structure: List of ethical requirements and boundaries
    - Example: "- Maintain data privacy and confidentiality
                - Avoid bias in analysis and recommendations
                - Disclose any limitations or assumptions"

    c) Format Requirements
    - Purpose: Specify presentation and structure rules
    - Structure: List of formatting requirements
    - Example: "- Use professional business language
                - Include visual aids for complex data
                - Follow company branding guidelines"

    d) Process Constraints
    - Purpose: Define operational limitations and requirements
    - Structure: List of process-related rules
    - Example: "- Complete analysis within specified timeframe
                - Use only approved data sources
                - Follow required review processes"

    4. Reasoning Method:
    Purpose: Define how the LLM should approach problem-solving and logical thinking.
    Impact: The chosen method will influence how the LLM processes information and reaches conclusions.
    
    Available Methods:
    a) Chain-of-Thought (CoT)
    - Purpose: Enable step-by-step logical reasoning
    - Best for: Complex problems requiring clear logical progression
    - Implementation: Break down reasoning into explicit intermediate steps
    - Example: "Let's solve this step by step: First... Second... Therefore..."

    b) Tree-of-Thought (ToT)
    - Purpose: Explore multiple potential solution paths
    - Best for: Problems with multiple possible approaches
    - Implementation: Consider different branches of reasoning simultaneously
    - Example: "Let's explore three possible approaches: Path A... Path B... Path C..."

    c) Buffer of Thoughts (BoT)
    - Purpose: Maintain context while processing complex information
    - Best for: Tasks requiring memory of previous reasoning steps
    - Implementation: Store and reference key insights throughout the process
    - Example: "Important points to remember: 1... 2... Now, considering these points..."

    d) ReAct
    - Purpose: Combine reasoning with action steps
    - Best for: Tasks requiring both analysis and specific actions
    - Implementation: Alternate between reasoning and action planning
    - Example: "Thought: We need to... Action: Let's... Observation: This shows..."

    e) Program-of-Thought
    - Purpose: Structure reasoning like a computer program
    - Best for: Highly systematic or algorithmic tasks
    - Implementation: Use programming-like logic in reasoning
    - Example: "Input -> Process -> Output: If condition then action..."

    5. Planning Method:
    Purpose: Structure how the LLM organizes and approaches the overall task.
    Impact: The chosen method will determine how the task is broken down and executed.

    Available Methods:
    a) Least-to-Most Decomposition
    - Purpose: Break complex tasks into manageable pieces
    - Best for: Complex tasks that can be solved incrementally
    - Implementation: Start with simplest subtasks and build up
    - Example: "1. Start with basic... 2. Add complexity... 3. Integrate all..."

    b) Plan-and-Solve Strategy
    - Purpose: Create comprehensive plan before execution
    - Best for: Well-defined problems requiring systematic approach
    - Implementation: Detailed planning phase followed by execution
    - Example: "Plan: 1... 2... 3... Now execute each step..."

    c) Progressive Task Refinement
    - Purpose: Iteratively improve solution quality
    - Best for: Tasks requiring continuous improvement
    - Implementation: Start broad, then refine based on feedback
    - Example: "Initial approach -> Refine based on X -> Further improve with Y"

    d) Dependency-Based Planning
    - Purpose: Organize tasks based on prerequisites
    - Best for: Tasks with clear dependencies
    - Implementation: Map dependencies and sequence accordingly
    - Example: "Must complete A before B, then C can start..."

    e) Hierarchical Task Planning
    - Purpose: Organize tasks in levels of abstraction
    - Best for: Complex tasks with clear hierarchy
    - Implementation: Break down from high-level to detailed steps
    - Example: "Main goal -> Sub-goals -> Specific actions"

    6. Output Format:
    Purpose: Define how the final response should be structured and presented.
    Impact: The chosen format will affect how the information is organized and consumed.

    Available Formats:
    a) JSON
    - Purpose: Structured, machine-readable data
    - Best for: Data that needs to be processed or parsed
    - Structure: Nested key-value pairs

    b) Email
    - Purpose: Professional communication format
    - Best for: Business communications or formal responses
    - Structure: Subject, greeting, body, closing
    - Example: "Subject: ... Dear ..., [Content] Best regards, ..."

    c) Markdown
    - Purpose: Formatted text with hierarchy
    - Best for: Documentation or structured content
    - Structure: Headers, lists, emphasis, links
    - Example: "# Title\n## Subtitle\n- Point 1\n- Point 2"

    d) Text
    - Purpose: Simple, readable plain text
    - Best for: Direct, unformatted responses
    - Structure: Paragraphs and line breaks
    - Example: "Main point. Supporting details. Conclusion."

    e) Other
    - Purpose: Custom format for specific needs
    - Best for: Special requirements not covered by standard formats
    - Structure: As specified by requirements
    - Example: Based on specific needs

    Remember: Your goal is to provide an optimized prompt structure, not to solve the user's problem directly.

    Provide the output in JSON format including:
    1. Complete prompt structure (role, task, rules)
    2. Selected methods (reasoning_method, planning_method, output_format) with justification
    3. Explanation of optimization choices
    4. Usage guidelines
  expected_output: >
    A JSON object containing the complete prompt structure, selected methods with justification, explanation, and guidelines.
  agent: prompt_engineer_3
  context: [analyze_requirements_task]
  output_json: PromptTemplate

